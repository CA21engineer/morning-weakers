name: CI

on: pull_request

# add [skip ci] to pull_request title to skip ci check
jobs:
  analyze:
    if: ${{ !contains(github.event.pull_request.title, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.17.3'
          channel: 'stable'
      - name: Flutter analyze
        run: ./scripts/analyze.sh
      - name: Cache bundle
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.1
      - name: Danger PR Comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gem install bundler
          bundle install
          bundle exec danger

  build-android:
    if: ${{ !contains(github.event.pull_request.title, '[skip ci]') }}
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.17.3'
          channel: 'stable'
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Pub get
        run: flutter pub get
      - name: Generate google-services.json
        env:
          GOOGLE_SERVICES_BASE64: ${{ secrets.GOOGLE_SERVICES_BASE64 }}
        run: echo $GOOGLE_SERVICES_BASE64 | base64 --decode --ignore-garbage > $GITHUB_WORKSPACE/android/app/google-services.json
      - name: Android build
        run: flutter build apk --release
        # TODO: DeployGateのjobを使いする
  #      - uses: actions/upload-artifact@v2
  #        with:
  #          name: generated_apk
  #          path: ./build/app/outputs/apk/release/app-release.apk


  build-ios:
    if: ${{ !contains(github.event.pull_request.title, '[skip ci]') }}
    runs-on: macos-latest
    needs: [analyze]
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.17.3'
          channel: 'stable'
      - uses: actions/cache@v1
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Pub get
        run: flutter pub get
      - name: Generate GoogleService-Info.plist
        env:
          GOOGLE_SERVICE_INFO_BASE64: ${{ secrets.GOOGLE_SERVICE_INFO_BASE64 }}
        run: echo $GOOGLE_SERVICE_INFO_BASE64 | base64 --decode > $GITHUB_WORKSPACE/ios/Runner/GoogleService-Info.plist
      - name: iOS build
        run: flutter build ios --release --no-codesign

  notification:
    needs: [build-android, build-ios]
    if: ${{ !contains(github.event.pull_request.title, '[skip ci]') }} && always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: get commit message
        id: set_commitmsg
        run: echo "::set-output name=commitmsg::$(git log --format=%B -n 1 ${{ github.event.after }})"
      # 失敗したときのSlackへの通知
      - name: Slack Notification Failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2.0.1
        env:
          SLACK_CHANNEL: hack01_flutter_log
          SLACK_ICON: https://github.com/actions.png?size=48
          SLACK_COLOR: '#ff0000'
          SLACK_TITLE: ':fire: Build Failure :fire:'
          SLACK_MESSAGE: |
            Build failure!
            See more detail to check github.
            commit -> `${{ steps.set_commitmsg.outputs.commitmsg }}`
          SLACK_USERNAME: Github Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      # 成功した時のSlackへの通知
      - name: Slack Notification Success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2.0.1
        env:
          SLACK_CHANNEL: hack01_flutter_log
          SLACK_ICON: https://github.com/actions.png?size=48
          SLACK_TITLE: ':rocket: Build Success :rocket:'
          SLACK_MESSAGE: |
            Build success! yattane!
            commit -> `${{ steps.set_commitmsg.outputs.commitmsg }}`
          SLACK_USERNAME: Github Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}